diff --git a/unique_field.module b/unique_field.module
index 6efbca5..80fb467 100644
--- a/unique_field.module
+++ b/unique_field.module
@@ -143,7 +143,7 @@ function unique_field_form_alter(array &$form, FormStateInterface $form_state, $
       '#type' => 'checkboxes',
       '#title' => t('Choose the fields that should be unique'),
       '#options' => $fieldopts,
-      '#default_value' => !empty($ntype) ? $config->get('unique_field_settings.' . $ntype . '.fields') : array(),
+      '#default_value' => !empty($config->get('unique_field_settings.' . $ntype . '.fields')) ? $config->get('unique_field_settings.' . $ntype . '.fields') : array(),
       '#description' => t('After designating that certain fields should be unique, users will not be able to submit the content form to create a new node or update an existing one if it contains values in the designated fields that duplicate others.'),
     );
 
@@ -156,7 +156,7 @@ function unique_field_form_alter(array &$form, FormStateInterface $form_state, $
         UNIQUE_FIELD_SCOPE_ALL => t('All nodes'),
         UNIQUE_FIELD_SCOPE_NODE => t('Single node only'),
       ),
-      '#default_value' => !empty($ntype) ? $config->get('unique_field_settings.' . $ntype . '.scope') : UNIQUE_FIELD_SCOPE_TYPE,
+      '#default_value' => !empty($config->get('unique_field_settings.' . $ntype . '.scope')) ? $config->get('unique_field_settings.' . $ntype . '.scope') : UNIQUE_FIELD_SCOPE_TYPE,
       '#description' => t('Choose whether the values in the specified fields must be unique among nodes of this content type, among nodes of the same language, among all nodes, or only among the fields of the present node.'),
     );
 
@@ -167,7 +167,7 @@ function unique_field_form_alter(array &$form, FormStateInterface $form_state, $
         UNIQUE_FIELD_COMP_EACH => t('Each of the specified fields must have a unique value'),
         UNIQUE_FIELD_COMP_ALL => t('The combination of values from the specified fields must be unique'),
       ),
-      '#default_value' => !empty($ntype) ? $config->get('unique_field_settings.' . $ntype . '.comp') : UNIQUE_FIELD_COMP_EACH,
+      '#default_value' => !empty($config->get('unique_field_settings.' . $ntype . '.comp')) ? $config->get('unique_field_settings.' . $ntype . '.comp') : UNIQUE_FIELD_COMP_EACH,
       '#description' => t('For example, if you have fields for the parts of a street address (street number and name, city, and zip code) on a node, and want to allow only one node per complete address, but not only one node per city or per zip code, then you would want to choose that the fields must be unique in combination.'),
     );
 
@@ -205,7 +205,7 @@ function unique_field_form_alter(array &$form, FormStateInterface $form_state, $
       '#type' => 'checkboxes',
       '#title' => t('Choose the fields that should be unique'),
       '#options' => $fieldopts,
-      '#default_value' => !empty($taxonomy_vocabulary_name) ? $config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.fields') : array(),
+      '#default_value' => !empty($config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.fields')) ? $config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.fields') : array(),
       '#description' => t('After designating that certain fields should be unique, users will not be able to submit the content form to create a new term or update an existing one if it contains values in the designated fields that duplicate others.'),
     );
     $form['unique_field_taxonomy']['unique_field_taxonomy_scope'] = array(
@@ -217,7 +217,7 @@ function unique_field_form_alter(array &$form, FormStateInterface $form_state, $
         UNIQUE_FIELD_SCOPE_ALL => t('All Vocabularies'),
         UNIQUE_FIELD_SCOPE_TERM => t('Single Term only'),
       ),
-      '#default_value' => !empty($taxonomy_vocabulary_name) ? $config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.scope') : UNIQUE_FIELD_SCOPE_VOCABULARY,
+      '#default_value' => !empty($config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.scope')) ? $config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.scope') : UNIQUE_FIELD_SCOPE_VOCABULARY,
       '#description' => t('Choose whether the values in the specified fields must be unique among terms of this Vocabulary, among terms of the same language, among all terms, or only among the fields of the present term.'),
     );
     $form['unique_field_taxonomy']['unique_field_taxonomy_comp'] = array(
@@ -227,7 +227,7 @@ function unique_field_form_alter(array &$form, FormStateInterface $form_state, $
         UNIQUE_FIELD_COMP_EACH => t('Each of the specified fields must have a unique value'),
         UNIQUE_FIELD_COMP_ALL => t('The combination of values from the specified fields must be unique'),
       ),
-      '#default_value' => !empty($taxonomy_vocabulary_name) ? $config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.comp') : UNIQUE_FIELD_COMP_EACH,
+      '#default_value' => !empty($config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.comp')) ? $config->get('unique_field_taxonomy.' . $taxonomy_vocabulary_name . '.comp') : UNIQUE_FIELD_COMP_EACH,
       '#description' => t('For example, if you have fields for the parts of a street address (street number and name, city, and zip code) on a term, and want to allow only one node per complete address, but not only one node per city or per zip code, then you would want to choose that the fields must be unique in combination.'),
     );
 
